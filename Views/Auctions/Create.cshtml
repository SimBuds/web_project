@model web_project.Models.Auction

@{
    ViewData["Title"] = "Create";
}

<h2>Create New Auction</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.StartingPrice, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.StartingPrice, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.StartingPrice, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Category, new SelectList(Enum.GetValues(typeof(Category))), "-- Select Category --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Condition , htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Condition, new SelectList(Enum.GetValues(typeof(Condition))), "-- Select Condition --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
    </div>

<div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary " />
</div>
}


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
